### FreeMASTER communication driver

menuconfig MCUX_COMPONENT_middleware.fmstr
    bool "FreeMASTER"
    help
        FreeMASTER communication driver code,
        enabling communication between FreeMASTER
        or FreeMASTER Lite tools and MCU application.

    if MCUX_COMPONENT_middleware.fmstr

### Platform

        choice FMSTR_CHOICE_PLATFORM
            prompt "Platform"
            default MCUX_COMPONENT_middleware.fmstr.platform_gen32le

            # Enable FreeMASTER driver generic 32bit specific code
            config MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                bool "ARM 32bit little-endian"
                help
                    FreeMASTER driver code for generic 32bit platforms,
                    supports Serial, NET, CAN, USB and BDM/JTAG physical interface.

            # Enable FreeMASTER driver DSC specific code
            config MCUX_COMPONENT_middleware.fmstr.platform_56f800e
                bool "DSC 56F800/E"
                help
                    FreeMASTER driver code for DSC platforms,
                    supports Serial, CAN, USB and BDM/JTAG physical interface.

            # Enable FreeMASTER driver generic S32 specific code
            config MCUX_COMPONENT_middleware.fmstr.platform_s32
                bool "S32"
                help
                    FreeMASTER driver code for generic S32 platforms.

            # Enable FreeMASTER driver Power Architecture specific code
            config MCUX_COMPONENT_middleware.fmstr.platform_pa32
                bool "Power Architecture 32bit"
                help
                    FreeMASTER driver code for Power Architecture 32bit platforms.

            # Enable FreeMASTER driver S12Z specific code
            config MCUX_COMPONENT_middleware.fmstr.platform_s12z
                bool "S12Z"
                help
                    FreeMASTER driver code for S12Z platforms.
        endchoice

### Generate configuration

        config MCUX_PRJSEG_middleware.fmstr.generated_config
            bool "Generate configuration file"
            select FMSTR_GENERATED_CONFIGURATION
            default y
            help
                Let Kconfig to generate the FreeMASTER configuration header file.
                Otherwise user needs to provide his own freemaster_cfg.h,
                refer to FreeMASTER example applications' code.

        # Generate configuration header file
        if MCUX_PRJSEG_middleware.fmstr.generated_config

            menu "Configuration header (freemaster_cfg.h)"

                config FMSTR_GENERATED_CONFIGURATION
                    bool
                    default y
                    help
                        Used generated FreeMASTER driver configuration header.
                        No prefix in generated macro

### Platform macro

                config FMSTR_PLATFORM_CORTEX_M
                    bool
                    default y
                    depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                    help
                        No prefix in generated macro

                config FMSTR_PLATFORM_56F800E
                    bool
                    default y
                    depends on MCUX_COMPONENT_middleware.fmstr.platform_56f800e
                    help
                        No prefix in generated macro

                config FMSTR_PLATFORM_S32
                    bool
                    default y
                    depends on MCUX_COMPONENT_middleware.fmstr.platform_s32
                    help
                        No prefix in generated macro

                config FMSTR_PLATFORM_PA32
                    bool
                    default y
                    depends on MCUX_COMPONENT_middleware.fmstr.platform_pa32
                    help
                        No prefix in generated macro

                config FMSTR_PLATFORM_S12Z
                    bool
                    default y
                    depends on MCUX_COMPONENT_middleware.fmstr.platform_s12z
                    help
                        No prefix in generated macro

### Communication interface

                choice
                    prompt "Communication interface"
                    default FMSTR_SERIAL

                    config FMSTR_SERIAL
                        bool "SERIAL"
                        depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le || MCUX_COMPONENT_middleware.fmstr.platform_56f800e
                        help
                            Serial transport protocol.

                    config FMSTR_CAN
                        bool "CAN"
                        depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le || MCUX_COMPONENT_middleware.fmstr.platform_56f800e
                        help
                            CAN transport protocol.

                    config FMSTR_PDBDM
                        bool "PDBDM"
                        depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                        help
                            Packet Driven BDM.

                    config FMSTR_NET
                        bool "NET"
                        depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                        help
                            Network transport protocol.
                endchoice

                config FMSTR_TRANSPORT
                    string
                    default "FMSTR_SERIAL" if FMSTR_SERIAL
                    default "FMSTR_CAN" if FMSTR_CAN
                    default "FMSTR_PDBDM" if FMSTR_PDBDM
                    default "FMSTR_NET" if FMSTR_NET
                    help
                        No prefix in generated macro

### Communication mode

                choice
                    prompt "Communication interrupt mode"
                    default FMSTR_POLL_DRIVEN

                    config FMSTR_LONG_INTR
                        bool "Long ISR - protocol processing in interrupt"
                        help
                            Complete message processing in interrupt.
                            No prefix in generated macro

                    config FMSTR_SHORT_INTR
                        bool "Short ISR - data buffering in interrupt, polled protocol processing"
                        help
                            Queuing done in interrupt.
                            No prefix in generated macro

                    config FMSTR_POLL_DRIVEN
                        bool "Poll - polled communication and protocol processing"
                        help
                            No interrupt needed, polling only.
                            No prefix in generated macro
                endchoice


### Serial driver

                if FMSTR_SERIAL
                    menu "Serial interface configuration"

                        choice FMSTR_CHOICE_SERIAL_DRIVER
                            prompt "Serial driver"
                            default FMSTR_SERIAL_MCUX_UART

                            config FMSTR_SERIAL_MCUX_UART
                                bool "UART - MCUX fsl_uart driver"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                                help
                                    Driver for UART peripheral.

                            config FMSTR_SERIAL_MCUX_LPUART
                                bool "LPUART - MCUX fsl_lpuart driver"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                                help
                                    Driver for LPUART peripheral.

                            config FMSTR_SERIAL_MCUX_USART
                                bool "USART - MCUX fsl_usart driver"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                                help
                                    Driver for USART peripheral.

                            config FMSTR_SERIAL_MCUX_MINIUSART
                                bool "MINIUSART - MCUX fsl_usart driver"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                                help
                                    Driver for MINIUSART peripheral.

                            config FMSTR_SERIAL_MCUX_USB
                                bool "USB CDC - MCUX usb_device stack"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le || MCUX_COMPONENT_middleware.fmstr.platform_56f800e
                                help
                                    Driver for USB peripheral with CDC class.

                            config FMSTR_SERIAL_MCUX_QSCI
                                bool "QSCI - MCUX fsl_qsci driver"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_56f800e
                                help
                                    Driver for DSC QSCI peripheral.

                            config FMSTR_SERIAL_56F800E_EONCE
                                bool "EONCE - DSC JTAG EOnCE RTD register-level access"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_56f800e
                                help
                                    56F800E-specific driver for JTAG EOnCE communication.

                            config FMSTR_USE_SERIAL_CUSTOM
                                bool "Custom - specify driver name"
                                help
                                    Use custom serial peripheral driver.

                            config FMSTR_CUSTOM_SERIAL_DRV
                                string  "Serial driver"
                                depends on FMSTR_USE_SERIAL_CUSTOM
                                help
                                    Specify custom serial peripheral driver.
                                    No prefix in generated macro
                        endchoice

                        config FMSTR_SERIAL_DRV
                            string
                            default "FMSTR_SERIAL_MCUX_UART" if FMSTR_SERIAL_MCUX_UART
                            default "FMSTR_SERIAL_MCUX_LPUART" if FMSTR_SERIAL_MCUX_LPUART
                            default "FMSTR_SERIAL_MCUX_USART" if FMSTR_SERIAL_MCUX_USART
                            default "FMSTR_SERIAL_MCUX_MINIUSART" if FMSTR_SERIAL_MCUX_MINIUSART
                            default "FMSTR_SERIAL_MCUX_USB" if FMSTR_SERIAL_MCUX_USB
                            default "FMSTR_SERIAL_MCUX_QSCI" if FMSTR_SERIAL_MCUX_QSCI
                            default "FMSTR_SERIAL_56F800E_EONCE" if FMSTR_SERIAL_56F800E_EONCE
                            default "FMSTR_CUSTOM_SERIAL_DRV" if FMSTR_USE_SERIAL_CUSTOM
                            help
                                No prefix in generated macro

                        config FMSTR_USE_SERIAL_BASE_ADDRESS
                            bool "Serial module base address (runtime-decided if undefined)"
                            default n
                            help
                                Use specified serial driver base address.

                        config FMSTR_SERIAL_BASE
                            string  "Address"
                            depends on FMSTR_USE_SERIAL_BASE_ADDRESS
                            help
                                Specify serial driver base address or leave undefined for runtime setting.
                                No prefix in generated macro

                        config FMSTR_SERIAL_SINGLEWIRE
                            bool "Single-wire mode"
                            help
                                Dynamic Receiver/Transmitter switching for single-wire serial mode
                                No prefix in generated macro

                        config FMSTR_COMM_RQUEUE_SIZE
                            int "Receive queue size for short-interrupt mode (0=automatic)"
                            default 0
                            depends on FMSTR_SHORT_INTR
                            help
                                Receive FIFO queue size. Set to 0 for "default".
                                No prefix in generated macro
                    endmenu
                endif

### CAN driver

                if FMSTR_CAN
                    menu "CAN interface configuration"

                        choice FMSTR_CHOICE_CAN_DRIVER
                            prompt "CAN driver"
                            default FMSTR_CAN_MCUX_FLEXCAN

                            config FMSTR_CAN_MCUX_FLEXCAN
                                bool "FlexCAN - MCUX fsl_flexcan driver"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                                help
                                    Driver for FlexCAN peripheral.

                            config FMSTR_CAN_MCUX_FLEXCANFD
                                bool "FlexCAN FD - MCUX fsl_flexcan driver with flexible bit rate"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                                help
                                    Driver for FlexCAN peripheral with flexible bit rate.

                            config FMSTR_CAN_MCUX_MCAN
                                bool "MCAN - MCUX fsl_mcan driver"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                                help
                                    Driver for MCAN peripheral.

                            config FMSTR_CAN_MCUX_MSCAN
                                bool "msCAN - MCUX fsl_mscan driver"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                                help
                                    Driver for msCAN peripheral.

                            config FMSTR_CAN_MCUX_DSCFLEXCAN
                                bool "FlexCAN - MCUX fsl_flexcan driver for DSC"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_56f800e
                                help
                                    Driver for DSC FlexCAN peripheral.

                            config FMSTR_CAN_MCUX_DSCMSCAN
                                bool "msCAN - MCUX fsl_mscan driver for DSC"
                                depends on MCUX_COMPONENT_middleware.fmstr.platform_56f800e
                                help
                                    Driver for DSC msCAN peripheral.

                            config FMSTR_USE_CAN_CUSTOM
                                bool "Custom - specify driver name"
                                help
                                    Use custom CAN peripheral driver.

                            config FMSTR_CUSTOM_CAN_DRV
                                string  "CAN driver"
                                depends on FMSTR_USE_CAN_CUSTOM
                                help
                                    Specify custom CAN peripheral driver.
                                    No prefix in generated macro
                        endchoice

                        config FMSTR_CAN_DRV
                            string
                            default "FMSTR_CAN_MCUX_FLEXCAN" if FMSTR_CAN_MCUX_FLEXCAN
                            default "FMSTR_CAN_MCUX_FLEXCANFD" if FMSTR_CAN_MCUX_FLEXCANFD
                            default "FMSTR_CAN_MCUX_MCAN" if FMSTR_CAN_MCUX_MCAN
                            default "FMSTR_CAN_MCUX_MSCAN" if FMSTR_CAN_MCUX_MSCAN
                            default "FMSTR_CAN_MCUX_DSCFLEXCAN" if FMSTR_CAN_MCUX_DSCFLEXCAN
                            default "FMSTR_CAN_MCUX_DSCMSCAN" if FMSTR_CAN_MCUX_DSCMSCAN
                            default "FMSTR_CUSTOM_CAN_DRV" if FMSTR_USE_CAN_CUSTOM
                            help
                                No prefix in generated macro

                        config FMSTR_USE_CAN_BASE_ADDRESS
                            bool "CAN module base address (runtime-decided if undefined)"
                            default n
                            help
                                Use specified CAN driver base address.

                        config FMSTR_CAN_BASE
                            string  "Address"
                            depends on FMSTR_USE_CAN_BASE_ADDRESS
                            help
                                Specify CAN driver base address or leave undefined for runtime setting.
                                No prefix in generated macro

                        config FMSTR_CAN_USE_CANFD
                            bool "Use CAN-FD mode"
                            default n
                            help
                                Use CAN-FD frames enabling larger data payloads and optional bit-rate switching.
                                No prefix in generated macro

                        config FMSTR_CANFD_USE_BRS
                            bool "Use CAN-FD bit rate switch"
                            depends on FMSTR_CAN_USE_CANFD
                            default n
                            help
                                Use CAN-FD dynamic Bit-rate switching.
                                No prefix in generated macro

                        config FMSTR_CAN_OVERRIDE_CANIDS
                            bool "Override CAN message IDs"

                        if FMSTR_CAN_OVERRIDE_CANIDS
                            config FMSTR_CAN_CMDID
                                int "Command CAN ID"
                                default 1962
                                help 
                                    Command CAN message ID (from PC to target). May be the same as response ID.
                                    No prefix in generated macro

                            config FMSTR_CAN_RESPID
                                int "Response CAN ID"
                                default 1962
                                help 
                                    Command CAN message ID (from target to PC). May be the same as command ID.
                                    No prefix in generated macro
                        endif

### FlexCAN configuration

                        if FMSTR_CAN_MCUX_FLEXCAN || FMSTR_CAN_MCUX_FLEXCANFD || FMSTR_CAN_MCUX_DSCFLEXCAN

                            config FMSTR_FLEXCAN_TXMB
                                int "FlexCAN TX Message Buffer index"
                                default 0
                                help
                                    No prefix in generated macro

                            config FMSTR_FLEXCAN_RXMB
                                int "FlexCAN RX Message Buffer index"
                                default 1
                                help
                                    No prefix in generated macro

                        endif

### MCAN configuration

                        if FMSTR_CAN_MCUX_MCAN

                            config FMSTR_MCAN_TXMB_OFFSET
                                int "MCAN Transmit buffer offset"
                                help
                                    MCAN transmit buffers offset in shared memory must be defined.
                                    No prefix in generated macro

                            config FMSTR_MCAN_RXMB_OFFSET
                                int "MCAN Receive buffer offset"
                                help
                                    MCAN receive buffers offset in shared memory must be defined.
                                    No prefix in generated macro

                            config FMSTR_MCAN_SHAREDMEMORY_OFFSET
                                hex "MCAN Shared memory offset"
                                help
                                    MCAN shared memory address must be defined.
                                    No prefix in generated macro
                        endif
                    endmenu
                endif


### NET driver

                if FMSTR_NET
                    menu "Network interface configuration"

                        choice FMSTR_CHOICE_NET_DRIVER
                            prompt "Network stack/driver"
                            default FMSTR_NET_LWIP_TCP

                            config FMSTR_NET_LWIP_TCP
                                bool "lwIP TCP"
                                help
                                    TCP using lwIP stack.

                            config FMSTR_NET_LWIP_UDP
                                bool "lwIP UDP"
                                help
                                    UDP using lwIP stack.

                            config FMSTR_NET_SEGGER_RTT
                                bool "SEGGER RTT"
                                help
                                    SEGGER RTT using J-Link debugger.
                        endchoice

                        config FMSTR_NET_DRV
                            string
                            default "FMSTR_NET_LWIP_TCP" if FMSTR_NET_LWIP_TCP
                            default "FMSTR_NET_LWIP_UDP" if FMSTR_NET_LWIP_UDP
                            default "FMSTR_NET_SEGGER_RTT" if FMSTR_NET_SEGGER_RTT
                            help
                                No prefix in generated macro

### Network configuration

                        if FMSTR_NET_LWIP_TCP || FMSTR_NET_LWIP_UDP

                            config FMSTR_NET_PORT
                                int "Server port number"
                                default 3344
                                help
                                    Server port number (used for both TCP or UDP).
                                    No prefix in generated macro

                            config FMSTR_NET_BLOCKING_TIMEOUT
                                int "Blocking timeout (ms)"
                                default 250
                                help
                                    Blocking timeout (ms) of network calls used in FMSTR_Poll.
                                    No prefix in generated macro

                            config FMSTR_SESSION_COUNT
                                int "Maximum client session count"
                                default 1
                                help
                                    Maximum number of simultaneous client sessions.
                                    No prefix in generated macro

                            config FMSTR_NET_AUTODISCOVERY
                                bool "Automatic board discovery"
                                default y
                                help
                                    Enable automatic board discovery via UDP.
                                    No prefix in generated macro
                        endif

### SEGGER RTT configuration

                        if FMSTR_NET_SEGGER_RTT

                            config FMSTR_NET_SEGGER_RTT_BUFFER_INDEX
                                int "RTT buffer index"
                                default 0
                                help
                                    SEGGER RTT buffer index.
                                    No prefix in generated macro

                            config FMSTR_NET_SEGGER_RTT_SECTION
                                bool "RTT memory section"
                                default n
                                help
                                    Enable to specify memory section for RTT control block.
                                    No prefix in generated macro

                            config SEGGER_RTT_SECTION
                                string "Section"
                                depends on FMSTR_NET_SEGGER_RTT_SECTION
                                help
                                    Specify memory section for RTT control block.
                                    No prefix in generated macro
                        endif
                    endmenu
                endif

### PDBDM communication buffer

                if FMSTR_PDBDM
                    menu "PD-BDM interface configuration"

                        config FMSTR_PDBDM_USER_BUFFER
                            bool "User-defined PDBDM buffer"
                            default n
                            help
                                User-defined PDBDM buffer (e.g. special section placement needed).
                                No prefix in generated macro
                    endmenu
                endif

### More communication options

                menu "More communication options"
                    config FMSTR_COMM_BUFFER_SIZE
                        int "Communication buffer size (0=automatic)"
                        default 0
                        help
                            Input/output communication buffer size.
                            Set to 0 for "automatic".
                            No prefix in generated macro
                endmenu


### Misc
                menu "Application strings"

                    config FMSTR_APPLICATION_STR
                        string "Application name (use quotes)"
                        default "\"FreeMASTER app\""
                        help
                            Application name used in auto discovery with NET communication interface.
                            No prefix in generated macro

                    config FMSTR_DESCRIPTION_STR
                        string "Application description (use quotes)"
                        default "\"FreeMASTER demo app\""
                        help
                            Application description name visible to FreeMASTER tool
                            No prefix in generated macro
                endmenu

### Memory access

                menu "Basic memory access"

                    config FMSTR_USE_READMEM
                        bool "Read memory support"
                        default y
                        help
                            Enable read memory commands.
                            No prefix in generated macro

                    config FMSTR_USE_WRITEMEM
                        bool "Write memory support"
                        default y
                        help
                            Enable write memory commands.
                            No prefix in generated macro

                    config FMSTR_USE_WRITEMEMMASK
                        bool "Write memory bits support"
                        default y
                        help
                            Enable write memory bits commands.
                            No prefix in generated macro
                endmenu 

### Enable TSA tables

                config FMSTR_USE_TSA
                    bool "TSA tables - target-defined symbols"
                    default y
                    help
                        Target-side address translation (TSA) enables user to define symbols and
                        data types visible to FreeMASTER host application. The host application
                        may use the TSA information instead of parsing an ELF file.
                        No prefix in generated macro

                if FMSTR_USE_TSA
                    config FMSTR_USE_TSA_INROM
                        bool "TSA tables in ROM"
                        default y
                        help
                            TSA tables declared as const (put to ROM).
                            No prefix in generated macro

                    config FMSTR_USE_TSA_SAFETY
                        bool "TSA memory protection"
                        default n
                        help
                            Enable/Disable TSA memory protection. When enabled, FreeMASTER will not
                            be able to access variables other than described by TSA tables.
                            No prefix in generated macro

                    config FMSTR_USE_TSA_DYNAMIC
                        bool "TSA entries modification in runtime"
                        default y
                        help
                            Enable/Disable TSA entries to be added also in runtime.
                            No prefix in generated macro

                    config FMSTR_USE_TSA_CDECL
                        bool "TSA 'cdecl' convention"
                        default n
                        help
                            Use specific 'cdecl' storage convention for TSA tables.

                    config FMSTR_TSA_CDECL
                        string "cdecl"
                        depends on FMSTR_USE_TSA_CDECL
                        help
                            Specify storage convention for TSA tables.
                            No prefix in generated macro
                endif

### Use oscilloscope

                config FMSTR_OSCILLOSCOPE
                    bool "Oscilloscope support"
                    default n
                    help
                        FreeMASTER Oscilloscope enables optimized real-time sampling 
                        of multiple variables. 

                if FMSTR_OSCILLOSCOPE

                    config FMSTR_USE_SCOPE
                        int "Number of Oscilloscopes supported"
                        default 1
                        help
                            Number of oscilloscopes allowed to run simultaneously.
                            No prefix in generated macro

                    if FMSTR_USE_SCOPE > 0
                        config FMSTR_MAX_SCOPE_VARS
                            int "Variables per one oscilloscope"
                            default 8
                            help
                                Maximum number of scope variables per one oscilloscope.
                                No prefix in generated macro
                    endif
                endif

### Use recorder

                config FMSTR_RECORDER
                    bool "Recorder support"
                    default n
                    help
                        FreeMASTER Recorder enables high-speed variable value recording 
                        into on-board memory.

                if FMSTR_RECORDER

                    config FMSTR_USE_RECORDER
                        int "Number of Recorders supported"
                        default 1
                        help
                            Number of recorders allowed to run simultaneously.
                            No prefix in generated macro

                    if FMSTR_USE_RECORDER > 0

                        menu "Recorder #0 configuration"

                            config FMSTR_REC_BUFF_SIZE
                                int "Recorder buffer size"
                                default 1024
                                help
                                    Built-in buffer size of recorder.
                                    Set to 0 to use runtime settings.
                                    No prefix in generated macro

                            config FMSTR_REC_TIMEBASE
                                string "Recorder time base (0=not specified)"
                                default "FMSTR_REC_BASE_MILLISEC(0)"
                                help
                                    Recorder time base, specifies how often the recorder 
                                    is called by the user application.
                                    No prefix in generated macro
                        endmenu
                    endif

                    if FMSTR_USE_RECORDER > 1
                        menu "Note: Recorder #1 and other instances are set up in runtime. No configuration here."
                        endmenu
                    endif

                    config FMSTR_REC_FLOAT_TRIG
                        bool "Floating point recorder triggering"
                        default y if MCUX_COMPONENT_middleware.fmstr.platform_gen32le
                        default n if MCUX_COMPONENT_middleware.fmstr.platform_56f800e
                        help
                            Enable/disable floating point triggering of the Recorder sampling. 
                            Requires floating point library to be linked.
                            No prefix in generated macro
                endif
### Use pipes

                config FMSTR_PIPES
                    bool "Pipes support"
                    default n
                    help
                        Pipes enable data streaming between MCU and FreeMASTER - such as 
                        console terminal I/O, data logging etc. Pipe endpoint must
                        be open by MCU application in runtime.

                if FMSTR_PIPES

                    config FMSTR_USE_PIPES
                        int "Number of pipes"
                        default 1
                        help
                            Specify number of pipes which can be open simultaneously.
                            Pipes must be open by MCU application in runtime.
                            No prefix in generated macro
                endif

### Application commands

                config FMSTR_USE_APPCMD
                    bool "Application Commands support"
                    default n
                    help
                        Enable/disable App.Commands support.
                        No prefix in generated macro

                if FMSTR_USE_APPCMD

                    config FMSTR_APPCMD_BUFF_SIZE
                        int "Command data buffer size"
                        default 32
                        help
                            App.command data buffer size.
                            No prefix in generated macro

                    config FMSTR_MAX_APPCMD_CALLS
                        int "Command callbacks count"
                        default 4
                        help
                            How many application command callbacks can be supported? (0=disable).
                            No prefix in generated macro
                endif

### Use access levels password

                config FMSTR_USE_PASSWORDS
                    bool "Access-levels and passwords support"
                    default n
                    help
                        Enable password protection of FreeMASTER features.

                if FMSTR_USE_PASSWORDS

                    config FMSTR_USE_RESTRICTED_ACCESS_R_PASSWORD
                        bool "Read-only mode password"
                        default n
                        help
                            Read-only access level password.
                            Let disabled when no password is required.

                    config FMSTR_RESTRICTED_ACCESS_R_PASSWORD
                        string "Password (use quotes)"
                        default "\"password-here\""
                        depends on FMSTR_USE_RESTRICTED_ACCESS_R_PASSWORD
                        help
                            Read-only access level password.
                            Let undefined when no password is required.
                            No prefix in generated macro

                    config FMSTR_USE_RESTRICTED_ACCESS_RW_PASSWORD
                        bool "Write mode password"
                        help
                            Write access level password.
                            Let disabled to set the same as for read-only access level.

                    config FMSTR_RESTRICTED_ACCESS_RW_PASSWORD
                        string "Password (use quotes)"
                        default "\"password-here\""
                        depends on FMSTR_USE_RESTRICTED_ACCESS_RW_PASSWORD
                        help
                            Write access level password.
                            Let undefined to set the same as for read-only access level.
                            No prefix in generated macro

                    config FMSTR_USE_RESTRICTED_ACCESS_RWF_PASSWORD
                        bool "Flash write password"
                        help
                            Flash access level password.
                            Let disabled to set the same as for write access level.

                    config FMSTR_RESTRICTED_ACCESS_RWF_PASSWORD
                        string "Password (use quotes)"
                        default "\"password-here\""
                        depends on FMSTR_USE_RESTRICTED_ACCESS_RWF_PASSWORD
                        help
                            Flash access level password.
                            Let undefined to set the same as for write access level.
                            No prefix in generated macro

                    config FMSTR_USE_HASHED_PASSWORDS
                        bool "Password as SHA1 hash"
                        depends on FMSTR_USE_RESTRICTED_ACCESS_R_PASSWORD || FMSTR_USE_RESTRICTED_ACCESS_RW_PASSWORD || FMSTR_USE_RESTRICTED_ACCESS_RWF_PASSWORD
                        default n
                        help
                            Storing cleartext passwords in Flash memory is not safe, consider 
                            storing their SHA1 hash instead. Even with this option, the hash must 
                            be generated from reasonably complex password to prevent dictionary attack.
                            When non-zero, all passwords are specified as a pointer to 20-byte 
                            SHA1 hash of password text.
                            No prefix in generated macro
                endif

### Debugging

                menu "Debugging"

                    config FMSTR_DISABLE
                        bool "Turn-off FreeMASTER temporarily, the API will compile as empty code"
                        default n
                        help
                            Turn-off the whole FreeMASTER support temporarily. 
                            All FreeMASTER API functions compile empty but are
                            still callable, so there is no need to change user code.
                            No prefix in generated macro

                    config FMSTR_DEBUG_LEVEL
                        int "Debugging print level"
                        default 0
                        help
                            Debugging print level (0=none, 1=errors, 2=normal, 3=verbose).
                            No prefix in generated macro

                    config FMSTR_DEBUG_PRINTF
                        string "Print function"
                        default "PRINT"
                        depends on FMSTR_DEBUG_LEVEL > 0
                        help
                            Define print function.
                            No prefix in generated macro

                    config FMSTR_PRINT_INCLUDE
                        string "Include file"
                        default "\"fsl_debug_console.h\""
                        depends on FMSTR_DEBUG_LEVEL > 0
                        help
                            Specify header file (where print function is defined) to be included.
                            No prefix in generated macro

                    config FMSTR_DEBUG_TX
                        bool "Transmitter debugging"
                        default n
                        help
                            Debug-TX mode is a special mode used to test or debug the data transmitter. Our driver
                            will be sending test frames periodically until a first valid command is received from the
                            PC Host. You can hook a logic analyzer to transmission pins to determine port and baudrate.
                            Or you can connect the FreeMASTER tool and run the connection wizard to listen for the dummy frames.
                            No prefix in generated macro
                endmenu
            endmenu

        endif
    endif